// <auto-generated />
using System;
using BlogMvc.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlogMvc.data.Migrations
{
    [DbContext(typeof(BlogContext))]
    partial class BlogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("BlogMvc.entity.About", b =>
                {
                    b.Property<int>("AboutBaslikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AboutBaslik")
                        .HasColumnType("TEXT");

                    b.Property<string>("AboutText")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("INTEGER");

                    b.HasKey("AboutBaslikId");

                    b.ToTable("Abouts");
                });

            modelBuilder.Entity("BlogMvc.entity.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BlogDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("BlogHeader")
                        .HasColumnType("TEXT");

                    b.Property<string>("BlogImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("BlogText")
                        .HasColumnType("TEXT");

                    b.Property<string>("BlogUrl")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHome")
                        .HasColumnType("INTEGER");

                    b.HasKey("BlogId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("BlogMvc.entity.BlogCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BlogId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CategoryId", "BlogId");

                    b.HasIndex("BlogId");

                    b.ToTable("BlogCategory");
                });

            modelBuilder.Entity("BlogMvc.entity.Career", b =>
                {
                    b.Property<int>("BusinessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BusinessCompany")
                        .HasColumnType("TEXT");

                    b.Property<string>("BusinessName")
                        .HasColumnType("TEXT");

                    b.Property<string>("BusinessTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("INTEGER");

                    b.HasKey("BusinessId");

                    b.ToTable("Careers");
                });

            modelBuilder.Entity("BlogMvc.entity.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BlogMvc.entity.CategoryPj", b =>
                {
                    b.Property<int>("CategoryProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryProjectId");

                    b.ToTable("CategoryProjects");
                });

            modelBuilder.Entity("BlogMvc.entity.CategorySkill", b =>
                {
                    b.Property<int>("CategorySkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SkillArea")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("CategorySkillId");

                    b.ToTable("CategorySkills");
                });

            modelBuilder.Entity("BlogMvc.entity.HomeBanner", b =>
                {
                    b.Property<int>("BannerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BannerHeader")
                        .HasColumnType("TEXT");

                    b.Property<string>("BannerText")
                        .HasColumnType("TEXT");

                    b.Property<string>("Bannerİmage")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsHome")
                        .HasColumnType("INTEGER");

                    b.HasKey("BannerId");

                    b.ToTable("HomeBanners");
                });

            modelBuilder.Entity("BlogMvc.entity.NoiceText", b =>
                {
                    b.Property<int>("NoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHome")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NoiceContent")
                        .HasColumnType("TEXT");

                    b.HasKey("NoiceId");

                    b.ToTable("NoiceTexts");
                });

            modelBuilder.Entity("BlogMvc.entity.ProfilePhoto", b =>
                {
                    b.Property<int>("ProfilePhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProfilePhotoUrl")
                        .HasColumnType("TEXT");

                    b.HasKey("ProfilePhotoId");

                    b.ToTable("ProfilePhotos");
                });

            modelBuilder.Entity("BlogMvc.entity.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHome")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ProjectDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectHeader")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectText")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectUrl")
                        .HasColumnType("TEXT");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("BlogMvc.entity.ProjectCategory", b =>
                {
                    b.Property<int>("CategoryProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CategoryProjectId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectCategory");
                });

            modelBuilder.Entity("BlogMvc.entity.School", b =>
                {
                    b.Property<int>("SchoolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SchoolEpisode")
                        .HasColumnType("TEXT");

                    b.Property<string>("SchoolLisans")
                        .HasColumnType("TEXT");

                    b.Property<string>("SchoolName")
                        .HasColumnType("TEXT");

                    b.Property<string>("SchoolUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("SchoolYear")
                        .HasColumnType("TEXT");

                    b.HasKey("SchoolId");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("BlogMvc.entity.Skill", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillPoint")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SkillText")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("SkillId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("BlogMvc.entity.SkillCategory", b =>
                {
                    b.Property<int>("CategorySkillId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CategorySkillId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("SkillCategory");
                });

            modelBuilder.Entity("BlogMvc.entity.SocialMedia", b =>
                {
                    b.Property<int>("SocialMediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SocialMediaIcon")
                        .HasColumnType("TEXT");

                    b.Property<string>("SocialMediaUrl")
                        .HasColumnType("TEXT");

                    b.HasKey("SocialMediaId");

                    b.ToTable("SocialMedias");
                });

            modelBuilder.Entity("BlogMvc.entity.BlogCategory", b =>
                {
                    b.HasOne("BlogMvc.entity.Blog", "Blog")
                        .WithMany("BlogCategories")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlogMvc.entity.Category", "Category")
                        .WithMany("BlogCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BlogMvc.entity.ProjectCategory", b =>
                {
                    b.HasOne("BlogMvc.entity.CategoryPj", "CategoryPj")
                        .WithMany("ProjectCategories")
                        .HasForeignKey("CategoryProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlogMvc.entity.Project", "Project")
                        .WithMany("ProjectCategories")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryPj");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("BlogMvc.entity.SkillCategory", b =>
                {
                    b.HasOne("BlogMvc.entity.CategorySkill", "CategorySkill")
                        .WithMany("SkillCategories")
                        .HasForeignKey("CategorySkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlogMvc.entity.Skill", "Skill")
                        .WithMany("SkillCategories")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategorySkill");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("BlogMvc.entity.Blog", b =>
                {
                    b.Navigation("BlogCategories");
                });

            modelBuilder.Entity("BlogMvc.entity.Category", b =>
                {
                    b.Navigation("BlogCategories");
                });

            modelBuilder.Entity("BlogMvc.entity.CategoryPj", b =>
                {
                    b.Navigation("ProjectCategories");
                });

            modelBuilder.Entity("BlogMvc.entity.CategorySkill", b =>
                {
                    b.Navigation("SkillCategories");
                });

            modelBuilder.Entity("BlogMvc.entity.Project", b =>
                {
                    b.Navigation("ProjectCategories");
                });

            modelBuilder.Entity("BlogMvc.entity.Skill", b =>
                {
                    b.Navigation("SkillCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
